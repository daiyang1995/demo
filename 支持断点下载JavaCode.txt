
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.IOUtils;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

@Controller
@RequestMapping(value = "/xxx")
public class DownFile {

    @RequestMapping(value = "/xxx")
    public void downFileFromUrl(String downFileUrl, HttpServletRequest request,
            HttpServletResponse response) throws Exception {
    	try {
    		URL url = new URL(downFileUrl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			//设置超时间为7秒  
			conn.setConnectTimeout(7 * 1000);
			//防止屏蔽程序抓取而返回403错误  
			conn.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)");
			
    		long fileLength = conn.getContentLength();//记录文件大小
            long pastLength = 0;//记录已下载文件大小  
            int rangeSwitch = 0;//0：从头开始的全文下载；1：从某字节开始的下载（bytes=27000-）；2：从某字节开始到某字节结束的下载（bytes=27000-39000）  
            long toLength = 0;//记录客户端需要下载的字节段的最后一个字节偏移量（比如bytes=27000-39000，则这个值是为39000）  
            long contentLength = 0;//客户端请求的字节总量  
            String rangeBytes = "";//记录客户端传来的形如“bytes=27000-”或者“bytes=27000-39000”的内容   
              
            if (request.getHeader("Range") != null) {// 客户端请求的下载的文件块的开始字节  
                response.setStatus(javax.servlet.http.HttpServletResponse.SC_PARTIAL_CONTENT);  
                rangeBytes = request.getHeader("Range").replaceAll("bytes=", "");  
                if (rangeBytes.indexOf('-') == rangeBytes.length() - 1) {//bytes=969998336-  
                    rangeSwitch = 1;  
                    rangeBytes = rangeBytes.substring(0, rangeBytes.indexOf('-'));  
                    pastLength = Long.parseLong(rangeBytes.trim());  
                    contentLength = fileLength - pastLength + 1;//客户端请求的是 969998336 之后的字节  
                } else {//bytes=1275856879-1275877358  
                    rangeSwitch = 2;  
                    String temp0 = rangeBytes.substring(0,rangeBytes.indexOf('-'));  
                    String temp2 = rangeBytes.substring(rangeBytes.indexOf('-') + 1, rangeBytes.length());  
                    pastLength = Long.parseLong(temp0.trim());//bytes=1275856879-1275877358，从第 1275856879 个字节开始下载  
                    toLength = Long.parseLong(temp2);//bytes=1275856879-1275877358，到第 1275877358 个字节结束  
                    contentLength = toLength - pastLength + 1;//客户端请求的是 1275856879-1275877358  之间的字节  
                }  
            } else {//从开始进行下载  
                contentLength = fileLength;//客户端要求全文下载  
            }  
			
			HttpURLConnection conn1 = (HttpURLConnection) url.openConnection();
			//设置超时间为7秒  
			conn1.setConnectTimeout(7 * 1000);
			//防止屏蔽程序抓取而返回403错误  
			conn1.setRequestProperty("User-Agent", "Mozilla/4.0 (compatible; MSIE 5.0; Windows NT; DigExt)");
			//设置线程下载资源的位置  
            conn1.setRequestProperty("Range", "bytes:"+rangeBytes);  
			InputStream inputStream = conn1.getInputStream();
			response.reset();//告诉客户端允许断点续传多线程连接下载,响应的格式是:Accept-Ranges: bytes  
	        response.setHeader("Accept-Ranges", "bytes");//如果是第一次下,还没有断点续传,状态是默认的 200,无需显式设置;响应的格式是:HTTP/1.1 200 OK  
			response.setHeader("Content-Disposition", "attachment; filename=" + new String(("理赔申请书.pdf").getBytes("utf-8"), "iso8859-1"));
			response.setContentType("multipart/form-data");
			response.setContentLength((int)contentLength);
			if (pastLength != 0) {  
	            //不是从最开始下载,  
	            //响应的格式是:  
	            //Content-Range: bytes [文件块的开始字节]-[文件的总大小 - 1]/[文件的总大小]  
	            switch (rangeSwitch) {  
	                case 1 : {//针对 bytes=27000- 的请求  
	                    String contentRange = new StringBuffer("bytes ").append(new Long(pastLength).toString()).append("-").append(new Long(fileLength - 1).toString()).append("/").append(new Long(fileLength).toString()).toString();  
	                    response.setHeader("Content-Range", contentRange);  
	                    break;  
	                }  
	                case 2 : {//针对 bytes=27000-39000 的请求  
	                    String contentRange = rangeBytes + "/" + new Long(fileLength).toString();  
	                    response.setHeader("Content-Range", contentRange);  
	                    break;  
	                }  
	                default : {  
	                    break;  
	                }  
	            }  
	        } else {  
	            //是从开始下载  
	        }  
			OutputStream outputStream = response.getOutputStream();
			IOUtils.write(IOUtils.toByteArray(inputStream), outputStream);
			outputStream.close();
			inputStream.close();
			
      } catch(Exception e) {
          e.printStackTrace();
      }
    }
    
}
